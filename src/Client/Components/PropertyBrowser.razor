@using BimKrav.Client.ViewModels
@inherits PropertyBrowserBase


<style>
    .mud-table-cell-custom-group {
        font-weight: 500;
    }

    .mud-table-cell-custom-group-footer {
        padding-bottom: 50px;
        text-align: right;
    }
</style>

<MudGrid>
    <MudItem xs=4><ProjectSelector @bind-SelectedProjectId="@ProjectId"></ProjectSelector></MudItem>
    <MudItem xs=4><PhaseSelector @bind-SelectedPhaseId="@PhaseId"></PhaseSelector></MudItem>
    <MudItem xs=4><DisciplineSelector @bind-SelectedDisciplineId="@DisciplineId"></DisciplineSelector></MudItem>
</MudGrid>


@if (Properties is null)
{
    <MudProgressCircular Color="Color.Primary" Size="Size.Medium" Indeterminate="true" />
}
else
{
    <MudScrollToTop>
        <MudFab Color="Color.Tertiary" Icon="@Icons.Filled.ArrowCircleUp" />
    </MudScrollToTop>
    <MudGrid>
        <MudItem xs="12">
            <MudTable Items="@Properties"
                  Dense="true"
                  Hover="true" @bind-SelectedItem="@SelectedProperty"
                  OnRowClick="(TableRowClickEventArgs<PropertyViewModel> args) => RowClicked(args)"
                  Breakpoint="Breakpoint.Sm" Loading="@IsLoading"
                  LoadingProgressColor="Color.Info"
                  Filter="p => Filter(p)"
                  GroupBy="@_propertyGroupDefinition"
                  Virtualize="true">
                <ToolBarContent>
                    <MudTextField @bind-Value="PropertySearchText" Placeholder="Search" Adornment="Adornment.Start" AdornmentIcon="@Icons.Material.Filled.Search" IconSize="Size.Medium" Class="mt-0"></MudTextField>
                </ToolBarContent>
                <GroupHeaderTemplate>
                    <MudTh Class="mud-table-cell-custom-group" colspan="6">
                        <MudHighlighter Text="@context.Key?.ToString()" HighlightedText="@PropertySearchText" />
                    </MudTh>
                </GroupHeaderTemplate>
                <HeaderContent>
                    <MudTh><MudTableSortLabel InitialDirection="SortDirection.Ascending" SortBy="new Func<PropertyViewModel, object>(x => x.Name)">Name</MudTableSortLabel></MudTh>
                    <MudTh><MudTableSortLabel SortBy="new Func<Property, object>(x => x.Description)">Description</MudTableSortLabel></MudTh>
                    <MudTh><MudTableSortLabel SortBy="new Func<Property, object>(x => x.Comment)">Comments</MudTableSortLabel></MudTh>
                </HeaderContent>
                <RowTemplate>
                    <MudTd DataLabel="Name">
                        <MudHighlighter Text="@context.Name" HighlightedText="@PropertySearchText" />
                    </MudTd>
                    <MudTd DataLabel="Description">
                        <MudHighlighter Text="@context.Description" HighlightedText="@PropertySearchText" />
                    </MudTd>
                    <MudTd DataLabel="Comments">
                        <MudHighlighter Text="@context.Comment" HighlightedText="@PropertySearchText" />
                    </MudTd>
                </RowTemplate>
                <ChildRowContent>
                    @if (context.ShowDetails)
                    {
                    <MudTr>
                        <td colspan="4">
                            <MudCard Elevation="0">
                                <MudCardContent Class="pa-0">

                                    <MudSimpleTable Style="overflow-x: auto;" Dense="true">
                                        <thead>
                                            <tr>
                                                <th>Name</th>
                                                <th>Value</th>
                                            </tr>
                                        </thead>
                                        <tbody>
                                            <tr>
                                                <td>GUID</td>
                                                <td>
                                                    <MudHighlighter Text="@context.Guid?.ToString()" HighlightedText="@PropertySearchText"/>
                                                </td>
                                            </tr>
                                            <tr>
                                                <td>Revit data type</td>
                                                <td>
                                                    <MudHighlighter Text="@context.RevitPropertyType" HighlightedText="@PropertySearchText"/>
                                                </td>
                                            </tr>
                                            <tr>
                                                <td>IFC data type</td>
                                                <td>
                                                    <MudHighlighter Text="@context.IfcPropertyType" HighlightedText="@PropertySearchText"/>
                                                </td>
                                            </tr>
                                            <tr>
                                                <td>Level</td>
                                                <td>
                                                    <MudHighlighter Text="@context.TypeInstance" HighlightedText="@PropertySearchText"/>
                                                </td>
                                            </tr>
                                            <tr>
                                                <td>Categories</td>
                                                <td>
                                                    <MudButton OnClick="() => context.ShowCategories = !context.ShowCategories">Show categories (@context.RevitCategories.Count)</MudButton>
                                                </td>
                                            </tr>
                                        </tbody>
                                    </MudSimpleTable>
                                    @if (context.ShowCategories)
                                        {

                                        <MudTable Items="@context.RevitCategories" Dense="true" Context="RevitCategoryContext" Hover="true" Breakpoint="Breakpoint.Sm" Elevation="0">
                                            <HeaderContent>
                                                <MudTh>Id</MudTh>
                                                <MudTh>Name</MudTh>
                                            </HeaderContent>
                                            <RowTemplate>
                                                <MudTd DataLabel="Id">@RevitCategoryContext.Id</MudTd>
                                                <MudTd DataLabel="Name">@RevitCategoryContext.Name</MudTd>
                                            </RowTemplate>
                                        </MudTable>

                                        }
                                </MudCardContent>
                            </MudCard>
                        </td>
                    </MudTr>
                    }
            </ChildRowContent>
        </MudTable>
    </MudItem>
</MudGrid>
}
@code {

    private readonly TableGroupDefinition<PropertyViewModel> _propertyGroupDefinition = new()
        {
            GroupName = "PSet",
            Indentation = true,
            Expandable = true,
            IsInitiallyExpanded = false,
            Selector = (e) => e?.PSets.FirstOrDefault()?.Name ?? "None"
        };

}